# _____             ______ _ _
# |  __ \           |  ____(_) |
# | |__) |   _ _ __ | |__   _| | ___
# |  _  / | | | '_ \|  __| | | |/ _ \
# | | \ \ |_| | | | | |    | | |  __/
# |_|  \_\__,_|_| |_|_|    |_|_|\___|


import itertools
import threading
import time
import sys
import os
from SixerpAPI import *
from SixerpAPI import Time_API as GET_TIME
from SixerpAPI import Authors_API as GET_AUTHORS
from SixerpAPI import Repeat_API as GET_REPEAT  # –î–ª—è –∫–æ–Ω—Ü–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
from SixerpAPI import INFOAPI_API as GET_INFOAPI


class Cars:
    mark = "–ù–µ —É—Å—Ç–≤–Ω–æ–≤–ª–µ–Ω–æ"
    weight = '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
    speed = '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    model = '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    made_in = '–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ'
    issue = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'

    def set(self, mark, weight, speed, model, made_in, issue):
       self.mark = mark
       self.weight = weight
       self.speed = speed
       self.model = model
       self.made_in = made_in
       self.issue = issue


class Moto(Cars):
    wheels = 2


print()
done = False


# –°–∞–º–∞ –∞–Ω–∏–º–∞—Ü–∏—è
def animation():
    for c in itertools.cycle(['|', '/', '-', '\\']):
       if done:
          break
       sys.stdout.write('\r–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤' + c)
       sys.stdout.flush()
       time.sleep(0.1)
    sys.stdout.write('\r–§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã! ')


t = threading.Thread(target=animation)
t.start()

# –î–ª–∏–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
time.sleep(3)
done = True
time.sleep(1)
print()

# –î–∞—Ç–∞, –≤—Ä–µ–º—è, –∞–≤—Ç–æ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∏–∑ API
GET_TIME()
GET_AUTHORS()

# –ù–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã,
# –†–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—è

print('\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! \n –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ—Å–∞–ª–æ–Ω.')
# f = open('logins.txt', "w")
USER_LOGIN = (input('–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –≤–≤–µ–¥—è –í–∞—à –ª–æ–≥–∏–Ω: '))
time.sleep(1)
print('–£—Å–ø–µ—à–Ω–æ!')
USER_PASSWORD = (input('–¢–µ–ø–µ—Ä–ø—å, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à –ø–∞—Ä–æ–ª—å: '))
time.sleep(1)

print()

print('–ó–∞–≥—Ä—É–∑–∫–∞.')
time.sleep(2)
print('–ó–∞–≥—Ä—É–∑–∫–∞..')
time.sleep(0.5)
print('–ó–∞–≥—Ä—É–∑–∫–∞...')

print('##############################')
print('–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∏ –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ –ë–∞–∑—É –î–∞–Ω–Ω—ã—Ö [Login is: ' + USER_LOGIN + ', Password is: ' + str(
    USER_PASSWORD) + ']')
UniqueID_API()
print('##############################')
time.sleep(5)
print()
print()
print(
    "–í –Ω–∞—à–µ–º –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ –∏–º–µ—é—Ç—Å—è: –ê–≤—Ç–æ–º–æ–±–∏–ª–∏üöó –∏ –ú–æ—Ç–æ—Ü–∏–∫–ª—ã, —Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –≤–≤–µ–¥—è 1 –∏–ª–∏ 2, –≥–¥–µ 1 - –ê–≤—Ç–æ, 2 - –ú–æ—Ç–æ ")  # üöó
CHOICE = input('–Ø —Ö–æ—á—É –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å: ')

if CHOICE == '1':
    print('–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
    time.sleep(1)
    print('–ê–≤—Ç–æ–º–æ–±–∏–ª–∏:')
    print('Germany: \n --Mercedes \n --BMW \n --Audi \n --Volkswagen')
    print('---')
    print("Japan: \n --Nissan \n --Mitsubishi \n --Toyota \n --LEXSUS ")

    print('–ñ–µ–ª–∞–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ?')
    print('–î–∞/–ù–µ—Ç' + Registerwords_API())
    CARS_USER_ANSWER = input('-> ')

    if CARS_USER_ANSWER == '–î–∞' or 'Yes':
       print('–ö–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –º–∞—Ä–∫—É –º–∞—à–∏–Ω—ã –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å?')
       print('Germany/Japan' + Registerwords_API())
    CARS_USER_ANSWER1 = input('-> ')
    if CARS_USER_ANSWER1 == 'Germany':
       print('–í—ã –≤—ã–±—Ä–∞–ª–∏ GERMANY:')
       time.sleep(1)
       print('–ö–∞–∫—É—é –º–∞—Ä–∫—É –º–∞—à–∏–Ω—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å? ')
       CAR_CHOICE = input('-> ')
       if CAR_CHOICE == 'Mercedes':
          Mercedes = Cars()
          Mercedes.set('Mercedes', '1–¢650–ö–ì', 140, 'CLK', 'GERMANY', '2007')
          print('–ú–∞—Ä–∫–∞: ' + Mercedes.mark)
          print('–í–µ—Å: ' + Mercedes.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Mercedes.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Mercedes.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Mercedes.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Mercedes.issue)
       if CAR_CHOICE == 'BMW':
          BMW = Cars()
          BMW.set('BMW', '1–¢900–ö–ì', 190, 'M-CLASS', 'GERMANY', '2015')
          print('–ú–∞—Ä–∫–∞: ' + BMW.mark)
          print('–í–µ—Å: ' + BMW.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(BMW.speed))
          print('–ú–æ–¥–µ–ª—å: ' + BMW.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + BMW.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + BMW.issue)
       if CAR_CHOICE == 'Audi':
          Audi = Cars()
          Audi.set('Audi', '2–¢', 180, 'A-CLASS', 'GERMANY', '2014')
          print('–ú–∞—Ä–∫–∞: ' + Audi.mark)
          print('–í–µ—Å: ' + Audi.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Audi.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Audi.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Audi.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Audi.issue)
       if CAR_CHOICE == 'Volkswagen':
          Volkswagen = Cars()
          Volkswagen.set('Volkswagen', '1–¢950–ö–ì', 165, 'TIGUAN', 'GERMANY', '2017')
          print('–ú–∞—Ä–∫–∞: ' + Volkswagen.mark)
          print('–í–µ—Å: ' + Volkswagen.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Volkswagen.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Volkswagen.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Volkswagen.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Volkswagen.issue)

    elif CARS_USER_ANSWER1 == 'Japan':
       print('–í—ã –≤—ã–±—Ä–∞–ª–∏ JAPAN:')
       time.sleep(1)
       print('–ö–∞–∫—É—é –º–∞—Ä–∫—É –º–∞—à–∏–Ω—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å? ')
       CAR_CHOICE = input('-> ')
       if CAR_CHOICE == 'Nissan':
          Nissan = Cars()
          Nissan.set('Nissan', '2–¢300', 165, 'PATROL', 'JAPAN', '2018')
          print('–ú–∞—Ä–∫–∞: ' + Nissan.mark)
          print('–í–µ—Å: ' + Nissan.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Nissan.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Nissan.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Nissan.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Nissan.issue)
       if CAR_CHOICE == 'Mitsubishi':
          Mitsubishi = Cars()
          Mitsubishi.set('Mitsubishi', '2–¢500–ö–ì', 170, 'PAJERO', 'JAPAN', '2014')
          print('–ú–∞—Ä–∫–∞: ' + Mitsubishi.mark)
          print('–í–µ—Å: ' + Mitsubishi.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Mitsubishi.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Mitsubishi.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Mitsubishi.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Mitsubishi.issue)
       if CAR_CHOICE == 'Toyota':
          Toyota = Cars()
          Toyota.set('Toyota', '2–¢', 185, 'KAMRI V40', 'JAPAN', '2012')
          print('–ú–∞—Ä–∫–∞: ' + Toyota.mark)
          print('–í–µ—Å: ' + Toyota.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Toyota.speed))
          print('–ú–æ–¥–µ–ª—å: ' + Toyota.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Toyota.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Toyota.issue)
       if CAR_CHOICE == 'LEXSUS':
          LEXSUS = Cars()
          LEXSUS.set('LEXSUS', '2–¢700–ö–ì', 165, 'LX 570', 'JAPAN', '2015')
          print('–ú–∞—Ä–∫–∞: ' + LEXSUS.mark)
          print('–í–µ—Å: ' + LEXSUS.weight)
          print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(LEXSUS.speed))
          print('–ú–æ–¥–µ–ª—å: ' + LEXSUS.model)
          print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + LEXSUS.made_in)
          print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + LEXSUS.issue)

    Cars()
    if CARS_USER_ANSWER == '–ù–µ—Ç' or 'No':
        print('')
        exit(0)
        sys.exit
        os.abort()

if CHOICE == '2':
    print('–ú–æ—Ç–æ—Ü–∏–∫–ª—ã:')
    print('Germany: \n --–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    print('---')
    print("Japan: \n --–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    print('–ñ–µ–ª–∞–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ –º–æ—Ç–æ—Ü–∏–∫–ª –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ?')
    print('–î–∞/–ù–µ—Ç' + Registerwords_API())
    MOTO_USER_ANSWER = input('-> ')

    if MOTO_USER_ANSWER == '–î–∞':
       print('–ö–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã –º–∞—Ä–∫—É –º–æ—Ç–æ—Ü–∏–∫–ª–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å?')
       print('Germany/Japan' + Registerwords_API())
    MOTO_USER_ANSWER1 = input('-> ')
    if MOTO_USER_ANSWER1 == 'Germany':
       print(HASNOT_API())
    elif MOTO_USER_ANSWER1 == 'Japan':
       print(HASNOT_API())
    else:
        print("–¢–∞–∫–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –Ω–µ—Ç!")

# if WANT == 'Mercedes':
#     Mercedes = Cars()
#     Mercedes.set('Mercedes', '1–¢650–ö–ì', 140, 'CLK', 'GERMANY', '2007')
#     print('–ú–∞—Ä–∫–∞: ' + Mercedes.mark)
#     print('–í–µ—Å: ' + Mercedes.weight)
#     print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + str(Mercedes.speed))
#     print('–ú–æ–¥–µ–ª—å: ' + Mercedes.model)
#     print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Mercedes.made_in)
#     print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Mercedes.issue)

# else:
#     Another = Cars()
#     print('–ú–∞—Ä–∫–∞: ' + Another.mark)
#     print('–í–µ—Å: ' + Another.weight)
#     print('–°–∫–æ—Ä–æ—Å—Ç—å: ' + Another.speed)
#     print('–ú–æ–¥–µ–ª—å: ' + Another.model)
#     print('–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–µ—Ç–µ–ª—å: ' + Another.made_in)
#     print('–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ' + Another.issue)
time.sleep(10)
Repeat_API()
INFOAPI_API()
